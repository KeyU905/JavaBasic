package day0331;
// 기본형 데이터타입 03 - char
// char는 character 라는 영어 단어의 줄임말이다.
// 캐릭터 라고 읽는 것이 올바른 방법이지만
// 예전에는 차 라고 읽었기 때문에
// 만약 차 변수를 만들어달라고 할 때에는 당황하지 말고 char 변수를 만들어 주면 된다.

// char 데이터타입은 1개의 문자를 2진법으로 변환해서 저장할 수 있다.
// 2진법으로 변환할 때는 ASCII 테이블이라는 특수한 문자표를 사용하여
// 해당 글자의 값을 저장하게 된다.
// 그렇기 때문에 우리가 char 값을 저장할 때에는 2가지 방법이 가능한데
// 글자를 직접 지정해서 넣는 방법과 해당 글자의 값을 저장하는 방법 2가지가 가능하다.
// 글자를 직접 지정해서 넣을 때에는 '' 안에 글자를 하나 넣어서 저장하면 된다.
// 단, ""를 넣어서도 안 되고 1개를 초과한 글자를 넣어서도 안된다.


// 왜냐하면, ""는 char의 값이 아니라 String 이라는 데이터타입의 값을 나타내기 때문이다.
// 또한 char는 해당 공간의 무조건 1개의 문자 값만 저장 가능하기 때문에 '' 안에 2개 이상의 글자를 넣어서도 안된다.

public class Ex10Char {
    public static void main(String[] args) {
        //char 변수를 만들어보자
        char myChar;
        
        // char 변수에 2가지 방법을 사용하여 값을 넣어보자
        // 1. 문자를 직접 넣기
       myChar = 'A';
       System.out.println("myChar의 현재값");
       System.out.println(myChar);
       
       // 2. 해당 문자의 10진법 값을 직접 넣어보기
       myChar = 97;
       System.out.println("myChar의 현재값");
       System.out.println(myChar);
       
       // 3. 복합적으로 사용해보기
       myChar = 'B' + 32;
       System.out.println("myChar의 현재값");
       System.out.println(myChar);
       
       // 다음 코드들은 에러가 나는 코드가 된다.
       // 1. '' 안에 한 개 이상의 글자를 넣는 경우
       // myChar = 'AB';
       // '' 를 썼다는 것은 char 타입의 값을 뜻하는데
       // 이 때에는 무조건 1번에 1개의 글자만 입력가능하다.
       // 따라서 2개 이상을 쓸 경우에는 에러가 발생한다.
       
       // 2. "" 값을 char 공간에 넣는 경우
       // myChar = "A";
       // ""는 char의 값이 아니라 String 이라는 데이터타입의 값을 뜻한다.
       // 여러분들이 System.out.println()을 쓰면서
       // ""는 여러 개의 글자를 다룰 수 있는 것을 보았다.
       // 따라서 한 번에 1개의 글자만 할당 가능한 char로써는
       // "" , 즉 String 타입의 값을 저장할 수 없다.
       // 그러므로 에러가 발생한다.
       
       // 결론 : char는 문자를 표시 가능한 데이터타입이지만
       //       한 번에 한 개의 글자만 표시할 수 있다는 단점이 존재하여
       //       잘 안씁니다.
       
       
       }
}
